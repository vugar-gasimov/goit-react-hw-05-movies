{"version":3,"file":"static/js/39.651d0793.chunk.js","mappings":"8QAWaA,GARcC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0HAQVF,EAAAA,GAAAA,IAAUG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,6NAYxBE,EAAYJ,EAAAA,GAAAA,IAAUK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,6aAYX,SAAAI,GAAK,OACvBA,EAAMC,UAAS,wCAAAC,OAC6BF,EAAMC,UAAS,MACvD,MAAM,IAYHE,EAAaT,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,kKAYvBS,EAAeX,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,gXA4BzBW,GAAab,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAYe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,4aAsBzBc,GAAgBhB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAekB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,klBA8B/BiB,EAAQnB,EAAAA,GAAAA,IAAUoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,+DAKlBmB,EAAOrB,EAAAA,GAAAA,IAAUsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,2E,SC1D9B,EAzEsB,WAAO,IAADqB,EAAAC,EAAAC,EAAAC,EAAAC,EAC1BC,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAqBL,EAAAA,EAAAA,UAAS,IAArBM,GAAwBJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhB,GACXE,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,SAAqB,QAAdhB,EAAAa,EAASI,aAAK,IAAAjB,OAAA,EAAdA,EAAgBkB,OAAQ,KACzCC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAajB,OAZAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeL,GACZM,MAAK,SAAAC,GACJhB,EAASgB,EACX,IACCC,OAAM,SAAAC,GACLP,EAAS,QACTT,EAASgB,EAAMC,QACjB,GACJ,GAAG,CAACV,EAAIE,IACRS,QAAQC,IAAItB,GAEPA,GAA0B,IAAjBA,EAAMuB,QAQlBC,EAAAA,EAAAA,MAACpD,EAAS,CAACG,UAAWyB,EAAMyB,cAAcC,SAAA,EACxCC,EAAAA,EAAAA,KAAC9C,EAAU,CAAC+C,GAAItB,EAAUuB,QAAQH,SAAC,UAEnCF,EAAAA,EAAAA,MAAC/C,EAAU,CAAAiD,SAAA,EACTC,EAAAA,EAAAA,KAAA,OACEG,MAAO,IACPC,OAAQ,IACRC,IACO,OAALhC,QAAK,IAALA,GAAAA,EAAOiC,YAAW,kCAAAzD,OACyB,OAALwB,QAAK,IAALA,OAAK,EAALA,EAAOiC,aACzC,uIAENC,IAAwC,QAArC1C,EAAsB,QAAtBC,EAAEO,EAAMmC,sBAAc,IAAA1C,EAAAA,EAAIO,EAAMoC,aAAK,IAAA5C,EAAAA,EAAIQ,EAAMqC,QAEpDb,EAAAA,EAAAA,MAAC7C,EAAY,CAAA+C,SAAA,EACXF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACsC,QADtChC,EACuB,QADvBC,EACGK,EAAMmC,sBAAc,IAAAxC,EAAAA,EAAIK,EAAMoC,aAAK,IAAA1C,EAAAA,EAAIM,EAAMqC,MAC9CV,EAAAA,EAAAA,KAAA,SAAM,IAAO,OAAL3B,QAAK,IAALA,OAAK,EAALA,EAAOsC,aAAa,QAE9Bd,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,gBAAmC,GAArB1B,EAAMuC,cAAmBC,QAAQ,GAAG,QACrDb,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAI1B,EAAMyC,YACVd,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,KAAAD,SACG1B,EAAM0C,OAAOC,KAAI,SAAAC,GAAK,OACrBjB,EAAAA,EAAAA,KAAA,QAAAD,SAAsBkB,EAAMP,MAAjBO,EAAMlC,GAAuB,aAMhDc,EAAAA,EAAAA,MAACzD,EAAW,CAAA2D,SAAA,EACVC,EAAAA,EAAAA,KAACtC,EAAI,CAAAqC,SAAC,6BACNF,EAAAA,EAAAA,MAACrC,EAAK,CAAAuC,SAAA,EACJC,EAAAA,EAAAA,KAAC3C,EAAa,CAAC4C,GAAG,OAAMF,SAAC,YACzBC,EAAAA,EAAAA,KAAC3C,EAAa,CAAC4C,GAAG,UAASF,SAAC,qBAGhCC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACkB,EAAAA,SAAQ,CAACC,UAAUnB,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,IAAIrB,UAC7BC,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,UA9CTrB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,KAiDf,C,wMCrFAE,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,eAAA3D,GAAA4D,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAM,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACdX,EAAAA,EAAAA,IAAU,mBAAoB,CACnDM,QAAMM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAON,GAAM,IAAEL,QAASA,MAC7B,KAAD,EAFU,OAEVM,EAAAE,EAAAI,KAFML,EAAID,EAAJC,KAAIC,EAAAK,OAAA,SAGLN,EAAKO,SAAO,wBAAAN,EAAAO,OAAA,GAAAX,EAAA,KACpB,gBALuBY,GAAA,OAAA1E,EAAA2E,MAAA,KAAAC,UAAA,KAOXrD,EAAc,eAAArB,GAAA0D,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAgB,EAAM3D,GAAE,IAAA4D,EAAAb,EAAA,OAAAJ,IAAAA,MAAA,SAAAkB,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EACbX,EAAAA,EAAAA,IAAU,SAADzE,OAAUkC,GAAM,CAC9C6C,OAAQ,CAAEL,QAASA,KAClB,KAAD,EAFU,OAEVoB,EAAAC,EAAAT,KAFML,EAAIa,EAAJb,KAAIc,EAAAR,OAAA,SAGLN,GAAI,wBAAAc,EAAAN,OAAA,GAAAI,EAAA,KACZ,gBAL0BG,GAAA,OAAA9E,EAAAyE,MAAA,KAAAC,UAAA,KAOdK,EAAa,eAAAC,GAAAtB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAsB,EAAMjE,GAAE,IAAAkE,EAAAnB,EAAA,OAAAJ,IAAAA,MAAA,SAAAwB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAjB,KAAA,EACZX,EAAAA,EAAAA,IAAU,SAADzE,OAAUkC,EAAE,YAAY,CACtD6C,OAAQ,CAAEL,QAASA,KAClB,KAAD,EAFU,OAEV0B,EAAAC,EAAAf,KAFML,EAAImB,EAAJnB,KAAIoB,EAAAd,OAAA,SAGLN,EAAKqB,MAAI,wBAAAD,EAAAZ,OAAA,GAAAU,EAAA,KACjB,gBALyBI,GAAA,OAAAL,EAAAP,MAAA,KAAAC,UAAA,KAMbY,EAAqB,eAAAC,GAAA7B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA6B,EAAMxE,GAAE,IAAAyE,EAAA1B,EAAA,OAAAJ,IAAAA,MAAA,SAAA+B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAxB,KAAA,EACpBX,EAAAA,EAAAA,IAAU,SAADzE,OAAUkC,EAAE,YAAY,CACtD6C,OAAQ,CAAEL,QAASA,KAClB,KAAD,EAFU,OAEViC,EAAAC,EAAAtB,KAFML,EAAI0B,EAAJ1B,KAAI2B,EAAArB,OAAA,SAGLN,EAAKO,SAAO,wBAAAoB,EAAAnB,OAAA,GAAAiB,EAAA,KACpB,gBALiCG,GAAA,OAAAJ,EAAAd,MAAA,KAAAC,UAAA,KAOrBkB,EAAiB,eAAAC,GAAAnC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAmC,EAAOC,EAAOlC,GAAM,IAAAmC,EAAAjC,EAAA,OAAAJ,IAAAA,MAAA,SAAAsC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAA/B,KAAA,EAC5BX,EAAAA,EAAAA,IAAU,eAAgB,CAC/CM,QAAMM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAI4B,MAAAA,GAAUlC,GAAM,IAAEL,QAASA,MACpC,KAAD,EAFU,OAEVwC,EAAAC,EAAA7B,KAFML,EAAIiC,EAAJjC,KAAIkC,EAAA5B,OAAA,SAGLN,EAAKO,SAAO,wBAAA2B,EAAA1B,OAAA,GAAAuB,EAAA,KACpB,gBAL6BI,EAAAC,GAAA,OAAAN,EAAApB,MAAA,KAAAC,UAAA,I","sources":["Pages/MovieDetailsStyled.js","Pages/MoviesDetails.jsx","Services/api.js"],"sourcesContent":["import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n  color: #fdd03b;\n  > a {\n    text-decoration: none;\n  }\n`;\nexport const MovieDetail = styled.div`\n  margin: 0 auto;\n  background: #10101058;\n  width: fit-content;\n  border-radius: 10px;\n  padding: 10px;\n  height: fit-content;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n\n  &::after {\n    content: '';\n    position: fixed;\n    top: 0px;\n    left: -5px;\n    width: calc(100% + 10px);\n    height: calc(100vh + 10px);\n    background-image: ${props =>\n      props.$backdrop\n        ? `url('https://image.tmdb.org/t/p/w500/${props.$backdrop}')`\n        : 'none'};\n    background-size: cover;\n\n    background-position: center;\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n\n    z-index: -1;\n    opacity: 0.35;\n  }\n`;\n\nexport const MovieImage = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  img {\n    display: flex;\n    width: 500px;\n    height: 650px;\n\n    border-radius: 5px;\n  }\n`;\n\nexport const MovieDetails = styled.div`\n  max-width: 500px;\n  background: #10101058;\n  border-radius: 10px;\n  padding: 10px;\n  height: fit-content;\n  h2 {\n    margin-bottom: 5px;\n    color: #fdd03b;\n  }\n\n  p {\n    margin: 5px 0;\n    color: #fdd03b;\n  }\n\n  h3,\n  h4 {\n    margin: 10px 0 5px;\n    color: #fdd03b;\n  }\n\n  span {\n    margin-right: 10px;\n    color: #fdd03b;\n  }\n`;\n\nexport const LinkStyled = styled(Link)`\n  width: fit-content;\n  text-decoration: none;\n  margin-left: 20px;\n  border: 2px solid #cdcdcd;\n  padding: 0.4rem 1.5rem;\n  font-size: 1.2rem;\n  border-radius: 2rem;\n  cursor: pointer;\n  display: inline-block;\n  height: 3rem;\n  color: #fdd03b;\n  border: 1px solid transparent;\n  background-color: #fdd03b;\n  border-color: transparent;\n  color: black;\n\n  &:hover:not(.active) {\n    color: #fff;\n  }\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  text-decoration: none;\n  margin-left: 20px;\n  border: 2px solid #cdcdcd;\n  padding: 0.4rem 1.5rem;\n  font-size: 1.2rem;\n  font-weight: 600;\n  border-radius: 2rem;\n  cursor: pointer;\n  display: inline-block;\n  height: 3rem;\n  color: #fdd03b;\n  border: 1px solid transparent;\n\n  border-color: transparent;\n\n  &.active {\n    color: #212121;\n    background-color: #fdd03b;\n    font-weight: 500;\n    border-color: #fdd348;\n  }\n\n  &:hover:not(.active) {\n    color: black;\n    background-color: #fdd03b;\n    font-weight: 500;\n    border-color: transparent;\n  }\n`;\nexport const Links = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Text = styled.div`\n  color: #fdd03b;\n  display: flex;\n  justify-content: center;\n`;\n","import { fetchMovieById } from 'Services/api';\nimport React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\n\nimport Loader from 'Loader/Loader';\nimport {\n  Container,\n  LinkStyled,\n  Links,\n  MovieDetail,\n  MovieDetails,\n  MovieImage,\n  NavLinkStyled,\n  Text,\n} from './MovieDetailsStyled';\n\nconst MoviesDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [, setError] = useState('');\n  const location = useLocation();\n  const goBackRef = useRef(location.state?.from || '/');\n  const { id } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchMovieById(id)\n      .then(response => {\n        setMovie(response);\n      })\n      .catch(error => {\n        navigate('/404');\n        setError(error.message);\n      });\n  }, [id, navigate]);\n  console.log(movie);\n\n  if (!movie || movie.length === 0) {\n    return (\n      <div>\n        <Loader />\n      </div>\n    );\n  }\n  return (\n    <Container $backdrop={movie.backdrop_path}>\n      <LinkStyled to={goBackRef.current}>BACK</LinkStyled>\n\n      <MovieImage>\n        <img\n          width={500}\n          height={650}\n          src={\n            movie?.poster_path\n              ? `https://image.tmdb.org/t/p/w500${movie?.poster_path}`\n              : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQju-zj4n6hRiWsnJfgNALcjvXBuMuUtPQP7FIskz9LhOnrogjzZSdSbkirqmngfDeMHd4&usqp=CAU'\n          }\n          alt={movie.original_title ?? movie.title ?? movie.name}\n        />\n        <MovieDetails>\n          <h2>\n            {movie.original_title ?? movie.title ?? movie.name}\n            <br />({movie?.release_date})\n          </h2>\n          <p>User score: {(movie.vote_average * 10).toFixed(2)}%</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h4>Genres</h4>\n          <p>\n            {movie.genres.map(genre => (\n              <span key={genre.id}>{genre.name}</span>\n            ))}\n          </p>\n        </MovieDetails>\n      </MovieImage>\n\n      <MovieDetail>\n        <Text>Additional information:</Text>\n        <Links>\n          <NavLinkStyled to=\"cast\"> Cast </NavLinkStyled>\n          <NavLinkStyled to=\"reviews\"> Reviews </NavLinkStyled>\n        </Links>\n      </MovieDetail>\n      <br />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst api_key = '3d5790bdd3fdeefaeb5478f646385f38';\n\nexport const fetchMovies = async params => {\n  const { data } = await axios.get('trending/all/day', {\n    params: { ...params, api_key: api_key },\n  });\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}`, {\n    params: { api_key: api_key },\n  });\n  return data;\n};\n\nexport const fetchCastById = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`, {\n    params: { api_key: api_key },\n  });\n  return data.cast;\n};\nexport const fetchMovieReviewsById = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`, {\n    params: { api_key: api_key },\n  });\n  return data.results;\n};\n\nexport const fetchMovieByQuery = async (query, params) => {\n  const { data } = await axios.get(`search/movie`, {\n    params: { query, ...params, api_key: api_key },\n  });\n  return data.results;\n};\n"],"names":["MovieDetail","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","Container","_templateObject3","props","$backdrop","concat","MovieImage","_templateObject4","MovieDetails","_templateObject5","LinkStyled","Link","_templateObject6","NavLinkStyled","NavLink","_templateObject7","Links","_templateObject8","Text","_templateObject9","_location$state","_ref","_movie$original_title","_ref2","_movie$original_title2","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","setError","location","useLocation","goBackRef","useRef","state","from","id","useParams","navigate","useNavigate","useEffect","fetchMovieById","then","response","catch","error","message","console","log","length","_jsxs","backdrop_path","children","_jsx","to","current","width","height","src","poster_path","alt","original_title","title","name","release_date","vote_average","toFixed","overview","genres","map","genre","Suspense","fallback","Loader","Outlet","axios","api_key","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","params","_yield$axios$get","data","_context","prev","next","_objectSpread","sent","abrupt","results","stop","_x","apply","arguments","_callee2","_yield$axios$get2","_context2","_x2","fetchCastById","_ref3","_callee3","_yield$axios$get3","_context3","cast","_x3","fetchMovieReviewsById","_ref4","_callee4","_yield$axios$get4","_context4","_x4","fetchMovieByQuery","_ref5","_callee5","query","_yield$axios$get5","_context5","_x5","_x6"],"sourceRoot":""}