{"version":3,"file":"static/js/833.5aea6a7a.chunk.js","mappings":"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","sources":["Helpers/cutText.jsx","Hooks/useHttp.jsx","Pages/HomeStyled.js","Pages/Home.jsx","Services/api.js"],"sourcesContent":["export const cutText = str => {\n  return `${str.slice(0, 11)}...`;\n};\n\nexport const lessCutText = str => {\n  return `${str.slice(0, 35)}`;\n};\n","import { useEffect, useState } from 'react';\n\nexport const useHttp = (fn, params) => {\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fn(params)\n      .then(data => setMovies(data))\n      .catch(error => setError(error.message));\n  }, [params, fn]);\n  return [movies, setMovies, { error }];\n};\n//useEffect(() => {\n//   fetchMovies()\n//     .then(data => setMovies(data.results))\n//     .catch(error => setError(error.message));\n// }, []);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  gap: 16px;\n  display: flex;\n\n  gap: 16px;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const CardWrapper = styled.div`\n  border-radius: 20px;\n  overflow: hidden;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const ProductName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n\nexport const MainWrapper = styled.main`\n  grid-area: main;\n  display: grid;\n  align-items: center;\n\n  padding: 10px 20px;\n  color: #fff;\n\n  background-position: center;\n  background-size: cover;\n  font-size: 1rem;\n`;\nexport const HomeTitle = styled.h2`\n  padding: 4px;\n  margin-top: 8px;\n  margin: 0 auto;\n  color: black;\n`;\n","import { fetchMovies } from 'Services/api';\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useHttp } from '../Hooks/useHttp';\n\nimport { cutText } from '../Helpers/cutText';\n\nimport {\n  CardWrapper,\n  Container,\n  HomeTitle,\n  MainWrapper,\n  ProductName,\n} from './HomeStyled';\n\nconst Home = () => {\n  const [movies] = useHttp(fetchMovies);\n  const location = useLocation();\n\n  return (\n    <MainWrapper>\n      <HomeTitle>Welcome</HomeTitle>\n      <HomeTitle>Today's trendings</HomeTitle>\n      <Container>\n        {movies &&\n          movies?.map(movie => (\n            <CardWrapper key={movie.id}>\n              <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n                <img\n                  width={200}\n                  height={350}\n                  src={\n                    movie?.poster_path\n                      ? `https://image.tmdb.org/t/p/w500${movie?.poster_path}`\n                      : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQju-zj4n6hRiWsnJfgNALcjvXBuMuUtPQP7FIskz9LhOnrogjzZSdSbkirqmngfDeMHd4&usqp=CAU'\n                  }\n                  alt={movie.original_title ?? movie.title ?? movie.name}\n                />\n\n                <ProductName>\n                  {cutText(movie.original_title ?? movie.title ?? movie.name)}\n                </ProductName>\n              </Link>\n            </CardWrapper>\n          ))}\n      </Container>\n    </MainWrapper>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst api_key = '3d5790bdd3fdeefaeb5478f646385f38';\n\nexport const fetchMovies = async params => {\n  const { data } = await axios.get('trending/all/day', {\n    params: { ...params, api_key: api_key },\n  });\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}`, {\n    params: { api_key: api_key },\n  });\n  return data;\n};\n\nexport const fetchCastById = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`, {\n    params: { api_key: api_key },\n  });\n  return data.cast;\n};\nexport const fetchMovieReviewsById = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`, {\n    params: { api_key: api_key },\n  });\n  return data.results;\n};\n\nexport const fetchMovieByQuery = async (query, params) => {\n  const { data } = await axios.get(`search/movie`, {\n    params: { query, ...params, api_key: api_key },\n  });\n  return data.results;\n};\n"],"names":["cutText","str","concat","slice","lessCutText","useHttp","fn","params","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","error","setError","useEffect","then","data","catch","message","Container","styled","_templateObject","_taggedTemplateLiteral","CardWrapper","_templateObject2","ProductName","_templateObject3","MainWrapper","_templateObject4","HomeTitle","_templateObject5","_useHttp","fetchMovies","location","useLocation","_jsxs","children","_jsx","map","movie","_ref","_movie$original_title","_ref2","_movie$original_title2","Link","state","from","to","id","width","height","src","poster_path","alt","original_title","title","name","axios","api_key","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","_context","prev","next","_objectSpread","sent","abrupt","results","stop","_x","apply","arguments","fetchMovieById","_callee2","_yield$axios$get2","_context2","_x2","fetchCastById","_ref3","_callee3","_yield$axios$get3","_context3","cast","_x3","fetchMovieReviewsById","_ref4","_callee4","_yield$axios$get4","_context4","_x4","fetchMovieByQuery","_ref5","_callee5","query","_yield$axios$get5","_context5","_x5","_x6"],"sourceRoot":""}